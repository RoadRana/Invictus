name: Pull Request CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      CI: true
    
    steps:
      - name: Check PR mergeable state
        id: pr-check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const mergeable = pr.data.mergeable;
            const mergeableState = pr.data.mergeable_state;
            
            core.info(`Mergeable: ${mergeable}`);
            core.info(`Mergeable state: ${mergeableState}`);
            
            if (mergeable === false) {
              core.warning('⚠️ PR has merge conflicts');
              core.setOutput('has_conflicts', 'true');
            } else if (mergeable === null) {
              core.info('Merge status not yet determined by GitHub');
              core.setOutput('has_conflicts', 'unknown');
            } else {
              core.info('✅ PR is mergeable');
              core.setOutput('has_conflicts', 'false');
            }

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint source code
        run: npm run lint

      - name: Run tests
        run: npm run test -- --coverage --watchAll=false

      - name: Run dependency audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not created"
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pr-build-${{ github.event.pull_request.number }}
          path: dist
          retention-days: 7
          if-no-files-found: error

      - name: Report results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const hasConflicts = '${{ steps.pr-check.outputs.has_conflicts }}';
            
            let emoji = status === 'success' ? '✅' : '❌';
            let message = `${emoji} CI checks ${status}`;
            
            if (hasConflicts === 'true') {
              message += '\n\n⚠️ **Merge conflicts detected** - Resolve conflicts before merging.';
              message += '\n\n_Note: Tests ran on your branch in isolation. After resolving conflicts, tests will automatically run again._';
            }
            
            message += `\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: message
            });